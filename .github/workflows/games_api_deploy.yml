name: 🚀 Games API CI/CD Pipeline

on:
  pull_request:
    branches: [main]
    types: [closed]
    paths:
      - 'services/games/**'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        default: 'dev-rodrigo'
        type: choice
        options:
          - dev-rodrigo

jobs:
  check-trigger:
    name: 🔍 Validate Deployment Trigger
    if: (github.event.pull_request.merged == true) || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: ✅ Check deployment trigger
        id: check
        run: |
          echo "should-deploy=true" >> $GITHUB_OUTPUT
          echo "🚀 Deployment triggered by: ${{ github.event_name }}"

  # Add unit tests here similar to users-api

  get-foundation-outputs:
    name: 🔗 Get Foundation Infrastructure
    runs-on: ubuntu-latest
    needs: [check-trigger]
    if: needs.check-trigger.outputs.should-deploy == 'true'
    environment: ${{ github.event.inputs.environment || 'dev-rodrigo' }}

    outputs:
      resource-group: ${{ steps.outputs.outputs.resource-group }}
      acr-name: ${{ steps.outputs.outputs.acr-name }}
      key-vault-name: ${{ steps.outputs.outputs.key-vault-name }}
      environment: ${{ steps.outputs.outputs.environment }}

    steps:
      - name: 🔐 Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🔗 Get Foundation Infrastructure Outputs
        id: outputs
        run: |
          AZURE_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.subscriptionId')
          GITHUB_ENVIRONMENT="${{ github.event.inputs.environment || 'dev-rodrigo' }}"
          AZURE_ENV_PREFIX=$(echo $GITHUB_ENVIRONMENT | cut -d'-' -f1)
          RESOURCE_GROUP="tc-cloudgames-solution-${AZURE_ENV_PREFIX}-rg"

          ACR_NAME=$(az acr list --resource-group $RESOURCE_GROUP --query "[?starts_with(name, 'tccloudgames${AZURE_ENV_PREFIX}')].name" -o tsv | head -1)
          KEY_VAULT_NAME=$(az keyvault list --resource-group $RESOURCE_GROUP --query "[?starts_with(name, 'tccloudgames${AZURE_ENV_PREFIX}')].name" -o tsv | head -1)

          echo "resource-group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "acr-name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "key-vault-name=$KEY_VAULT_NAME" >> $GITHUB_OUTPUT
          echo "environment=$GITHUB_ENVIRONMENT" >> $GITHUB_OUTPUT

  deploy:
    name: 🚀 Deploy Container App  
    needs: [check-trigger, get-foundation-outputs]
    if: needs.check-trigger.outputs.should-deploy == 'true'
    uses: ./.github/workflows/deploy-container-app.yml
    with:
      service-name: games-api
      workspace-path: tc-cloudgames-solution/services/games
      dockerfile-path: services/games/src/Adapters/Inbound/TC.CloudGames.Games.Api/Dockerfile
      environment: ${{ needs.get-foundation-outputs.outputs.environment }}
      acr-name: ${{ needs.get-foundation-outputs.outputs.acr-name }}
      key-vault-name: ${{ needs.get-foundation-outputs.outputs.key-vault-name }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  summary:
    name: 📊 Deployment Summary
    runs-on: ubuntu-latest
    needs: [check-trigger, get-foundation-outputs, deploy]
    if: always() && needs.check-trigger.outputs.should-deploy == 'true'

    steps:
      - name: 📊 Generate Deployment Summary
        run: |
          echo "# 🚀 games-api Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: \`${{ needs.get-foundation-outputs.outputs.environment }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: \`games-api\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Result**: \`${{ needs.deploy.result }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Infrastructure**: Managed by Terraform 🏗️" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment**: Clean pipeline with Azure Container Apps Deploy Action ⚡" >> $GITHUB_STEP_SUMMARY
